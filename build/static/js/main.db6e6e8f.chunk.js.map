{"version":3,"sources":["index.js"],"names":["canvas","document","querySelector","setAttribute","window","innerWidth","innerHeight","context","getContext","width","height","tau","Math","PI","n","particles","Array","i","x","random","y","vx","vy","col","randomInt","min","max","floor","font","fillStyle","textBaseline","textAlign","words","fillText","length","d3","elapsed","save","strokeStyle","p","maxDistance","beginPath","arc","j","pi","pj","dx","dy","d2","globalAlpha","minDistance","moveTo","lineTo","stroke","restore"],"mappings":"+JAAA,+BAkCIA,EAASC,SAASC,cAAc,UACpCF,EAAOG,aAAa,QAApB,UAAgCC,OAAOC,WAAvC,OACAL,EAAOG,aAAa,SAApB,UAAiCC,OAAOE,YAAxC,OAeA,IAbA,IAAIC,EAAUP,EAAOQ,WAAW,MAC9BC,EAAQT,EAAOS,MACfC,EAASV,EAAOU,OAOdC,EAAM,EAAIC,KAAKC,GACjBC,EAAI,IACJC,EAAY,IAAIC,MAAMF,GAEfG,EAAI,EAAGA,EAAIH,IAAKG,EACvBF,EAAUE,GAAK,CACbC,EAAGN,KAAKO,SAAWV,EACnBW,EAAGR,KAAKO,SAAWT,EACnBW,GAAI,EACJC,GAAI,GAIR,IAAIC,EAAM,EAGJC,EAAY,SAACC,EAAKC,GAAN,OAAcd,KAAKe,MAAMf,KAAKO,UAAYO,EAAMD,EAAM,GAAKA,IAG7ElB,EAAQqB,KAAO,gBACfrB,EAAQsB,UAAY,QACpBtB,EAAQuB,aAAe,SACvBvB,EAAQwB,UAAY,SACpB,IAAIC,EAAQ,CACV,cACA,aACA,UACA,WACA,WACA,OACA,iBACA,UACA,cACA,YAEFzB,EAAQ0B,SAASD,EAAMR,EAAU,EAAGQ,EAAME,OAAS,IAAKzB,EAAQ,EAAGC,EAAS,GAG5EyB,KAAS,SAASC,GAChB7B,EAAQ8B,OAIR9B,EAAQ+B,YAAR,eAA+Bf,GAAO,EAAtC,aAA6CC,EAAU,EAAG,KAA1D,cAAoEA,EAAU,GAAI,IAAlF,YAEID,EAAM,MAAKA,EAAM,GAErB,IAAK,IAAIN,EAAI,EAAGA,EAAIH,IAAKG,EAAG,CAC1B,IAAIsB,EAAIxB,EAAUE,GAClBsB,EAAErB,GAAKqB,EAAElB,GACLkB,EAAErB,GAtDM,GAsDYqB,EAAErB,GAAKT,EAAQ+B,IAC9BD,EAAErB,EAAIT,EAvDH,KAuDwB8B,EAAErB,GAAKT,EAAQ+B,KACnDD,EAAEnB,GAAKmB,EAAEjB,GACLiB,EAAEnB,GAzDM,GAyDYmB,EAAEnB,GAAKV,EAAS8B,IAC/BD,EAAEnB,EAAIV,EA1DH,KA0DyB6B,EAAEnB,GAAKV,EAAS8B,KACrDD,EAAElB,IAAM,IAAOT,KAAKO,SAAW,IAAO,IAAOoB,EAAElB,GAC/CkB,EAAEjB,IAAM,IAAOV,KAAKO,SAAW,IAAO,IAAOoB,EAAEjB,GAC/Cf,EAAQkC,YACRlC,EAAQmC,IAAIH,EAAErB,EAAGqB,EAAEnB,EAhEZ,IAgEuB,EAAGT,GAInC,IAASM,EAAI,EAAGA,EAAIH,IAAKG,EACvB,IAAK,IAAI0B,EAAI1B,EAAI,EAAG0B,EAAI7B,IAAK6B,EAAG,CAC9B,IAAIC,EAAK7B,EAAUE,GACjB4B,EAAK9B,EAAU4B,GACfG,EAAKF,EAAG1B,EAAI2B,EAAG3B,EACf6B,EAAKH,EAAGxB,EAAIyB,EAAGzB,EACf4B,EAAKF,EAAKA,EAAKC,EAAKA,EAClBC,EAvEOR,OAwETjC,EAAQ0C,YACND,EA1EOE,MACAV,KAyE6BQ,GAAhB,IAAsD,EAC5EzC,EAAQkC,YACRlC,EAAQ4C,OAAOP,EAAG1B,EAAG0B,EAAGxB,GACxBb,EAAQ6C,OAAOP,EAAG3B,EAAG2B,EAAGzB,GACxBb,EAAQ8C,UAKd9C,EAAQ+C,c","file":"static/js/main.db6e6e8f.chunk.js","sourcesContent":["import \"./reset.css\";\nimport \"./style.css\";\nimport * as d3 from \"d3\";\n\n// eslint-disable-next-line no-unused-vars\nconst globalCompositeOperationModes = {\n  \"normal\": \"source-over\",\n  \"source-in\": \"source-in\",\n  \"source-out\": \"source-out\",\n  \"source-atop\": \"source-atop\",\n  \"destination-over\": \"destination-over\",\n  \"destination-in\": \"destination-in\",\n  \"destination-out\": \"destination-out\",\n  \"destination-atop\": \"destination-atop\",\n  \"lighter\": \"lighter\",\n  \"copy\": \"copy\",\n  \"xor\": \"xor\",\n  \"multiply\": \"multiply\",\n  \"screen\": \"screen\",\n  \"overlay\": \"overlay\",\n  \"darken\": \"darken\",\n  \"lighten\": \"lighten\",\n  \"color-dodge\": \"color-dodge\",\n  \"color-burn\": \"color-burn\",\n  \"hard-light\": \"hard-light\",\n  \"soft-light\": \"soft-light\",\n  \"difference\": \"difference\",\n  \"exclusion\": \"exclusion\",\n  \"hue\": \"hue\",\n  \"saturation\": \"saturation\",\n  \"color\": \"color\",\n  \"luminosity\": \"luminosity\"\n};\n\nvar canvas = document.querySelector(\"canvas\");\ncanvas.setAttribute(\"width\", `${window.innerWidth}px`);\ncanvas.setAttribute(\"height\", `${window.innerHeight}px`);\n\nvar context = canvas.getContext(\"2d\"),\n  width = canvas.width,\n  height = canvas.height,\n  radius = 2.5,\n  minDistance = 40,\n  maxDistance = 60,\n  minDistance2 = minDistance * minDistance,\n  maxDistance2 = maxDistance * maxDistance;\n\nvar tau = 2 * Math.PI,\n  n = 400,\n  particles = new Array(n);\n\nfor (var i = 0; i < n; ++i) {\n  particles[i] = {\n    x: Math.random() * width,\n    y: Math.random() * height,\n    vx: 0,\n    vy: 0\n  };\n}\n\nlet col = 0;\n\nconst randomFloat = (min, max) => Math.random() * (max - min) + min;\nconst randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\nconst shuffle = array => array.sort(() => Math.random() - 0.5);\n\ncontext.font = \"200px Georgia\";\ncontext.fillStyle = \"white\";\ncontext.textBaseline = \"middle\";\ncontext.textAlign = \"center\";\nlet words = [\n  \"Serendipity\",\n  \"Compassion\",\n  \"Cherish\",\n  \"Eternity\",\n  \"Felicity\",\n  \"Love\",\n  \"Quintessential\",\n  \"Nemesis\",\n  \"Tranquility\",\n  \"Elegance\"\n];\ncontext.fillText(words[randomInt(0, words.length - 1)], width / 2, height / 2);\n\n// context.globalCompositeOperation = globalCompositeOperationModes[\"source-atop\"]\nd3.timer(function(elapsed) {\n  context.save();\n\n  // context.clearRect(0, 0, width, height);\n\n  context.strokeStyle = `hsla(${(col += 1)}, ${randomInt(0, 100)}%, ${randomInt(20, 60)}%, .023)`;\n\n  if (col > 360) col = 0;\n\n  for (var i = 0; i < n; ++i) {\n    var p = particles[i];\n    p.x += p.vx;\n    if (p.x < -maxDistance) p.x += width + maxDistance * 2;\n    else if (p.x > width + maxDistance) p.x -= width + maxDistance * 2;\n    p.y += p.vy;\n    if (p.y < -maxDistance) p.y += height + maxDistance * 2;\n    else if (p.y > height + maxDistance) p.y -= height + maxDistance * 2;\n    p.vx += 0.2 * (Math.random() - 0.5) - 0.01 * p.vx;\n    p.vy += 0.2 * (Math.random() - 0.5) - 0.01 * p.vy;\n    context.beginPath();\n    context.arc(p.x, p.y, radius, 0, tau);\n    // context.fill();\n  }\n\n  for (var i = 0; i < n; ++i) {\n    for (var j = i + 1; j < n; ++j) {\n      var pi = particles[i],\n        pj = particles[j],\n        dx = pi.x - pj.x,\n        dy = pi.y - pj.y,\n        d2 = dx * dx + dy * dy;\n      if (d2 < maxDistance2) {\n        context.globalAlpha =\n          d2 > minDistance2 ? (maxDistance2 - d2) / (maxDistance2 - minDistance2) : 1;\n        context.beginPath();\n        context.moveTo(pi.x, pi.y);\n        context.lineTo(pj.x, pj.y);\n        context.stroke();\n      }\n    }\n  }\n\n  context.restore();\n});\n"],"sourceRoot":""}